version: "3.8"
services:
  mongodb:
    image: mongo:latest
    container_name: zifo-skills-mongodb
    network_mode: host
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 5s
      timeout: 10s
      retries: 20

  python-api:
    image: zifo-skills-api
    build:
      context: ..
      dockerfile: ./docker/api/Dockerfile
    container_name: zifo-skills-api
    environment:
      - SKILLS_ENV=production
    volumes:
      - ../.env.prod:/home/skills-user/.env.prod
    depends_on:
      mongodb:
        condition: service_healthy
    network_mode: host
    healthcheck:
      test: wget http://localhost:8080/docs -O - || exit 1
      interval: 5s
      timeout: 10s
      retries: 20

  react-frontend:
    image: zifo-skills-frontend
    build:
      context: ..
      dockerfile: ./docker/frontend/Dockerfile
    container_name: zifo-skills-frontend
    network_mode: host
    environment:
      - REACT_APP_API_URL=http://skills.zifo-tech.com/api/
    volumes:
      - /node_modules
    depends_on:
      python-api:
        condition: service_healthy
    healthcheck:
      test: wget http://localhost:3000/docs -O - || exit 1
      interval: 5s
      timeout: 10s
      retries: 20

  nginx:
    image: nginx:1.15-alpine
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    network_mode: host
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''

  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    network_mode: host
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
